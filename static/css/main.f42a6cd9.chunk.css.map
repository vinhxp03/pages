{"version":3,"sources":["webpack://src/components/app/assets/css/_navbar.scss","webpack://src/components/app/assets/css/_variables.scss","webpack://src/components/app/assets/css/_modal.scss","webpack://src/components/app/assets/css/_placeholder.scss","webpack://src/components/app/assets/css/mixins/_clearfix.scss","webpack://src/components/app/assets/css/utilities/_display.scss","webpack://src/components/app/assets/css/mixins/_breakpoints.scss","webpack://src/components/app/assets/css/utilities/_flex.scss","webpack://src/components/app/assets/css/utilities/_visibility.scss","webpack://src/components/app/assets/css/mixins/_visibility.scss","webpack://src/components/app/assets/css/mixins/_grid.scss","webpack://src/components/app/assets/css/_grid.scss","webpack://src/components/app/assets/css/mixins/_grid-framework.scss","webpack://src/components/app/assets/css/_content-box.scss","webpack://src/components/app/assets/css/_content-left.scss","webpack://src/components/app/assets/css/_scroll-top.scss","webpack://src/components/app/assets/css/app.scss"],"names":[],"mappings":"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","file":"main.f42a6cd9.chunk.css","sourcesContent":["@import 'variables';\r\n\r\n.top-nav {\r\n  padding: 8px;\r\n  text-align: center;\r\n}\r\n\r\n.navbar {\r\n  top: 0;\r\n  z-index: 99;\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  background-color: $bgcolor;\r\n  box-shadow: 0 2px 3px #e0e0e0;\r\n\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .nav-right {\r\n    float: right;\r\n\r\n    li {\r\n      float: left;\r\n      margin-right: 20px;\r\n\r\n      a {\r\n        display: inline-block;\r\n        padding: 15px 15px;\r\n        color: $main-color;\r\n        text-transform: uppercase;\r\n        letter-spacing: 0.1em;\r\n        position: relative;\r\n        text: {\r\n          align: center;\r\n          decoration: none;\r\n        }\r\n  \r\n        &::after {\r\n          content: \"\";\r\n          bottom: 0;\r\n          width: 0;\r\n          left: 50%;\r\n          height: 3px;\r\n          display: block;\r\n          position: absolute;\r\n          background-color: $main-color;\r\n          -webkit-transition: width 0.3s ease 0s, left 0.3s ease 0s;\r\n          -moz-transition: width 0.3s ease 0s, left 0.3s ease 0s;\r\n          -ms-transition: width 0.3s ease 0s, left 0.3s ease 0s;\r\n          -o-transition: width 0.3s ease 0s, left 0.3s ease 0s;\r\n          transition: width 0.3s ease 0s, left 0.3s ease 0s;\r\n        }\r\n  \r\n        &:hover::after, &.active::after {\r\n          width: 100%; \r\n          left: 0; \r\n        }\r\n      }\r\n    }\r\n\r\n    #scroll-down {\r\n      margin-right: 10px;\r\n      font-size: 40px;\r\n      color: $main-color;\r\n      cursor: pointer;\r\n      opacity: 0.8;\r\n    \r\n      i:hover {\r\n        color: $hover-color;\r\n      }\r\n    }\r\n  }\r\n}","// Main\r\n\r\n$main-color: #0bba88;\r\n$hover-color: #17e0a6;\r\n\r\n$bgcolor: #fff;\r\n$bgcolor-bar: #333;\r\n\r\n// Grid\r\n\r\n$grid-columns: 12;\r\n$grid-gutter-width: 30px;\r\n\r\n// Grid breakpoints\r\n//\r\n// Define the minimum dimensions at which your layout will change,\r\n// adapting to different screen sizes, for use in media queries.\r\n\r\n$grid-breakpoints: (\r\n  xs: 0,\r\n  sm: 576px,\r\n  md: 768px,\r\n  lg: 992px,\r\n  xl: 1200px\r\n) !default;\r\n\r\n// Grid containers\r\n//\r\n// Define the maximum width of `.container` for different screen sizes.\r\n\r\n$container-max-widths: (\r\n  sm: 540px,\r\n  md: 720px,\r\n  lg: 960px,\r\n  xl: 1140px\r\n) !default;\r\n\r\n// Options\r\n\r\n$enable-grid-classes: true;","@import 'variables';\r\n@import 'placeholder';\r\n\r\n.modal {\r\n  position: fixed;\r\n  z-index: 999;\r\n  padding: 30px 0;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0,0,0,0.6);\r\n\r\n  @extend %scrollbar-style;\r\n\r\n  .modal-content {\r\n    position: relative;\r\n    margin: auto;\r\n    padding: 0;\r\n    border-radius: 8px;\r\n    border: 1px solid #888;\r\n    max-width: 80%;\r\n    background-color: #fff;\r\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\r\n\r\n    -webkit-animation-name: animatetop;\r\n    -webkit-animation-duration: 0.4s;\r\n    animation-name: animatetop;\r\n    animation-duration: 0.4s;\r\n  }\r\n\r\n  .modal-header {\r\n    // padding: 15px 10px;\r\n    // background-color: $main-color;\r\n    // color: #fff;\r\n\r\n    .close {\r\n      color: $main-color;\r\n      float: right;\r\n      font-size: 30px;\r\n      font-weight: bold;\r\n      position: relative;\r\n      right: 5px;\r\n\r\n      &:hover, &:focus {\r\n        color: $hover-color;\r\n        text-decoration: none;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .modal-footer {\r\n    padding: 2px 16px;\r\n    background-color: #5cb85c;\r\n    color: white;\r\n  }\r\n\r\n  .modal-body {\r\n    padding: 2px 16px;\r\n\r\n    // Markdowm style\r\n    .markdown {\r\n      a {\r\n        color: $main-color;\r\n        text-decoration: none;\r\n\r\n        &:hover {\r\n          color: $hover-color;\r\n          text-decoration: underline;\r\n        }\r\n      }\r\n\r\n      blockquote {\r\n        margin: 0;\r\n        padding: 1px 10px;\r\n        font-style: italic;\r\n        font-size: 15px;\r\n        color: #666;\r\n        border-left: 3px solid #888;\r\n      }\r\n\r\n      table {\r\n        overflow-x:auto;\r\n        border-collapse: collapse;\r\n        border-spacing: 0;\r\n        \r\n        th, td {\r\n          padding: 8px;\r\n          border: 1px solid #ddd;\r\n        }\r\n  \r\n        tr {\r\n          &:nth-child(even) {\r\n            background-color: #f2f2f2;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/* Add Animation */\r\n@-webkit-keyframes animatetop {\r\n  from {top:-300px; opacity:0} \r\n  to {top:0; opacity:1}\r\n}\r\n\r\n@keyframes animatetop {\r\n  from {top:-300px; opacity:0}\r\n  to {top:0; opacity:1}\r\n}","%scrollbar-style {\r\n  &::-webkit-scrollbar-track\r\n  {\r\n    box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\r\n    border-radius: 10px;\r\n    background-color: #F5F5F5;\r\n  }\r\n\r\n  &::-webkit-scrollbar\r\n  {\r\n    width: 8px;\r\n    background-color: #F5F5F5;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb\r\n  {\r\n    border-radius: 10px;\r\n    box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n    background-color: #e0e0e0;\r\n  }\r\n}","@mixin clearfix() {\n  &::after {\n    display: block;\n    clear: both;\n    content: \"\";\n  }\n}\n","// stylelint-disable declaration-no-important\n\n//\n// Utilities for common `display` values\n//\n\n@each $breakpoint in map-keys($grid-breakpoints) {\n  @include media-breakpoint-up($breakpoint) {\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n    .d#{$infix}-none         { display: none !important; }\n    .d#{$infix}-inline       { display: inline !important; }\n    .d#{$infix}-inline-block { display: inline-block !important; }\n    .d#{$infix}-block        { display: block !important; }\n    .d#{$infix}-table        { display: table !important; }\n    .d#{$infix}-table-row    { display: table-row !important; }\n    .d#{$infix}-table-cell   { display: table-cell !important; }\n    .d#{$infix}-flex         { display: flex !important; }\n    .d#{$infix}-inline-flex  { display: inline-flex !important; }\n  }\n}\n\n\n//\n// Utilities for toggling `display` in print\n//\n\n@media print {\n  .d-print-none         { display: none !important; }\n  .d-print-inline       { display: inline !important; }\n  .d-print-inline-block { display: inline-block !important; }\n  .d-print-block        { display: block !important; }\n  .d-print-table        { display: table !important; }\n  .d-print-table-row    { display: table-row !important; }\n  .d-print-table-cell   { display: table-cell !important; }\n  .d-print-flex         { display: flex !important; }\n  .d-print-inline-flex  { display: inline-flex !important; }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}","// stylelint-disable declaration-no-important\n\n// Flex variation\n//\n// Custom styles for additional flex alignment options.\n\n@each $breakpoint in map-keys($grid-breakpoints) {\n  @include media-breakpoint-up($breakpoint) {\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n    .flex#{$infix}-row            { flex-direction: row !important; }\n    .flex#{$infix}-column         { flex-direction: column !important; }\n    .flex#{$infix}-row-reverse    { flex-direction: row-reverse !important; }\n    .flex#{$infix}-column-reverse { flex-direction: column-reverse !important; }\n\n    .flex#{$infix}-wrap         { flex-wrap: wrap !important; }\n    .flex#{$infix}-nowrap       { flex-wrap: nowrap !important; }\n    .flex#{$infix}-wrap-reverse { flex-wrap: wrap-reverse !important; }\n\n    .justify-content#{$infix}-start   { justify-content: flex-start !important; }\n    .justify-content#{$infix}-end     { justify-content: flex-end !important; }\n    .justify-content#{$infix}-center  { justify-content: center !important; }\n    .justify-content#{$infix}-between { justify-content: space-between !important; }\n    .justify-content#{$infix}-around  { justify-content: space-around !important; }\n\n    .align-items#{$infix}-start    { align-items: flex-start !important; }\n    .align-items#{$infix}-end      { align-items: flex-end !important; }\n    .align-items#{$infix}-center   { align-items: center !important; }\n    .align-items#{$infix}-baseline { align-items: baseline !important; }\n    .align-items#{$infix}-stretch  { align-items: stretch !important; }\n\n    .align-content#{$infix}-start   { align-content: flex-start !important; }\n    .align-content#{$infix}-end     { align-content: flex-end !important; }\n    .align-content#{$infix}-center  { align-content: center !important; }\n    .align-content#{$infix}-between { align-content: space-between !important; }\n    .align-content#{$infix}-around  { align-content: space-around !important; }\n    .align-content#{$infix}-stretch { align-content: stretch !important; }\n\n    .align-self#{$infix}-auto     { align-self: auto !important; }\n    .align-self#{$infix}-start    { align-self: flex-start !important; }\n    .align-self#{$infix}-end      { align-self: flex-end !important; }\n    .align-self#{$infix}-center   { align-self: center !important; }\n    .align-self#{$infix}-baseline { align-self: baseline !important; }\n    .align-self#{$infix}-stretch  { align-self: stretch !important; }\n  }\n}\n","//\n// Visibility utilities\n//\n\n.visible {\n  @include invisible(visible);\n}\n\n.invisible {\n  @include invisible(hidden);\n}\n","// stylelint-disable declaration-no-important\n\n// Visibility\n\n@mixin invisible($visibility) {\n  visibility: $visibility !important;\n}\n","/// Grid system\r\n//\r\n// Generate semantic grid columns with these mixins.\r\n\r\n@mixin make-container() {\r\n  width: 100%;\r\n  padding-right: ($grid-gutter-width / 2);\r\n  padding-left: ($grid-gutter-width / 2);\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n}\r\n\r\n\r\n// For each breakpoint, define the maximum width of the container in a media query\r\n@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {\r\n  @each $breakpoint, $container-max-width in $max-widths {\r\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\r\n      max-width: $container-max-width;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin make-row() {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-right: ($grid-gutter-width / -2);\r\n  margin-left: ($grid-gutter-width / -2);\r\n}\r\n\r\n@mixin make-col-ready() {\r\n  position: relative;\r\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\r\n  // always setting `width: 100%;`. This works because we use `flex` values\r\n  // later on to override this initial width.\r\n  width: 100%;\r\n  min-height: 1px; // Prevent collapsing\r\n  padding-right: ($grid-gutter-width / 2);\r\n  padding-left: ($grid-gutter-width / 2);\r\n}\r\n\r\n@mixin make-col($size, $columns: $grid-columns) {\r\n  flex: 0 0 percentage($size / $columns);\r\n  // Add a `max-width` to ensure content within each column does not blow out\r\n  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari\r\n  // do not appear to require this.\r\n  max-width: percentage($size / $columns);\r\n}\r\n\r\n@mixin make-col-offset($size, $columns: $grid-columns) {\r\n  $num: $size / $columns;\r\n  margin-left: if($num == 0, 0, percentage($num));\r\n}","// Container widths\r\n//\r\n// Set the container width, and override it for fixed navbars in media queries.\r\n\r\n@if $enable-grid-classes {\r\n  .container {\r\n    @include make-container();\r\n    @include make-container-max-widths();\r\n  }\r\n}\r\n\r\n// Fluid container\r\n//\r\n// Utilizes the mixin meant for fixed width containers, but with 100% width for\r\n// fluid, full width layouts.\r\n\r\n@if $enable-grid-classes {\r\n  .container-fluid {\r\n    @include make-container();\r\n  }\r\n}\r\n\r\n// Row\r\n//\r\n// Rows contain and clear the floats of your columns.\r\n\r\n@if $enable-grid-classes {\r\n  .row {\r\n    @include make-row();\r\n  }\r\n\r\n  // Remove the negative margin from default .row, then the horizontal padding\r\n  // from all immediate children columns (to prevent runaway style inheritance).\r\n  .no-gutters {\r\n    margin-right: 0;\r\n    margin-left: 0;\r\n\r\n    > .col,\r\n    > [class*=\"col-\"] {\r\n      padding-right: 0;\r\n      padding-left: 0;\r\n    }\r\n  }\r\n}\r\n\r\n// Columns\r\n//\r\n// Common styles for small and large grid columns\r\n\r\n@if $enable-grid-classes {\r\n  @include make-grid-columns();\r\n}\r\n","// Framework grid generation\n//\n// Used only by Bootstrap to generate the correct number of grid classes given\n// any value of `$grid-columns`.\n\n@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\n  // Common properties for all breakpoints\n  %grid-column {\n    position: relative;\n    width: 100%;\n    min-height: 1px; // Prevent columns from collapsing when empty\n    padding-right: ($gutter / 2);\n    padding-left: ($gutter / 2);\n  }\n\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    // Allow columns to stretch full width below their breakpoints\n    @for $i from 1 through $columns {\n      .col#{$infix}-#{$i} {\n        @extend %grid-column;\n      }\n    }\n    .col#{$infix},\n    .col#{$infix}-auto {\n      @extend %grid-column;\n    }\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      // Provide basic `.col-{bp}` classes for equal-width flexbox columns\n      .col#{$infix} {\n        flex-basis: 0;\n        flex-grow: 1;\n        max-width: 100%;\n      }\n      .col#{$infix}-auto {\n        flex: 0 0 auto;\n        width: auto;\n        max-width: none; // Reset earlier grid tiers\n      }\n\n      @for $i from 1 through $columns {\n        .col#{$infix}-#{$i} {\n          @include make-col($i, $columns);\n        }\n      }\n\n      .order#{$infix}-first { order: -1; }\n\n      .order#{$infix}-last { order: $columns + 1; }\n\n      @for $i from 0 through $columns {\n        .order#{$infix}-#{$i} { order: $i; }\n      }\n\n      // `$columns - 1` because offsetting by the width of an entire row isn't possible\n      @for $i from 0 through ($columns - 1) {\n        @if not ($infix == \"\" and $i == 0) { // Avoid emitting useless .offset-0\n          .offset#{$infix}-#{$i} {\n            @include make-col-offset($i, $columns);\n          }\n        }\n      }\n    }\n  }\n}\n","$cb-bgcolor-hover: #f6f6f6;\r\n$cb-hover-color: #bbb;\r\n\r\n.content-item {\r\n  padding: 1px 8px;\r\n  border-radius: 2px;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  box-shadow: 1px 1px 2px 1px $cb-hover-color;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: $cb-bgcolor-hover;\r\n    box-shadow: 0px 1px 3px 2px $cb-hover-color;\r\n  }\r\n\r\n  &.active {\r\n    @extend :hover;\r\n  }\r\n\r\n  .box-info {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    padding: 1px 3px;\r\n    background-color: #63d00a;\r\n    color: #fff;\r\n  }\r\n}","$cl-bgcolor: #ccc;\r\n$cl-bgcolor-input: #f5f5f5;\r\n\r\n.content-left {\r\n  width: 20%;\r\n  height: 90%;\r\n  padding: 0 5px;\r\n  position: fixed;\r\n  background-color: $cl-bgcolor;\r\n  // box-shadow: 0 2px 1px #e0e0e0;\r\n\r\n  /* overflow-y: scroll;\r\n  scrollbar-width: none; // Firefox \r\n  -ms-overflow-style: none;  // Internet Explorer 10+ \r\n  &::-webkit-scrollbar { // WebKit \r\n    width: 0;\r\n    height: 0;\r\n  } */\r\n\r\n  input[type=\"text\"] {\r\n    width: 100%;\r\n    margin-top: 5px;\r\n    padding: 5px;\r\n    font-size: 15px;\r\n    border: none;\r\n    background-color: $cl-bgcolor-input;\r\n\r\n    &:active, &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  overflow-y: auto;\r\n  @extend %scrollbar-style;\r\n\r\n  a {\r\n    color: rgb(65, 65, 65);\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      color: $main-color;\r\n      // text-decoration: underline;\r\n    }\r\n  }\r\n}","#scroll-top {\r\n  position: fixed;\r\n  bottom: 60px;\r\n  right: 10px;\r\n  z-index: 99;\r\n  font-size: 40px;\r\n  color: $main-color;\r\n  cursor: pointer;\r\n  animation: fadeIn 0.5s;\r\n  transition: opacity 0.4s;\r\n\r\n  i:hover {\r\n    color: $hover-color;\r\n  }\r\n}","/**\r\n*\r\n*/\r\n@import \"variables\";\r\n\r\n@import \"mixins/breakpoints\";\r\n@import \"mixins/grid-framework\";\r\n@import \"mixins/grid\";\r\n@import \"mixins/clearfix\";\r\n@import \"mixins/visibility\";\r\n\r\n@import \"utilities/display\";\r\n@import \"utilities/flex\";\r\n\r\n@import \"placeholder\";\r\n@import \"utilities\";\r\n\r\n@import \"grid\";\r\n@import \"content-box\";\r\n@import \"content-left\";\r\n@import \"scroll-top\";\r\n\r\nbody {\r\n  margin: 0;\r\n  color: #444;\r\n  font-family: Georgia, Times, 'Times New Roman', serif;\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n.main {\r\n  margin-top: 10px;\r\n}"]}